[{"path":"index.html","id":"data-preparation","chapter":"IMAP-Part 07: Microbiome Data Preparation Guide","heading":"IMAP-Part 07: Microbiome Data Preparation Guide","text":"","code":""},{"path":"index.html","id":"welcome-to-chapter-7","chapter":"IMAP-Part 07: Microbiome Data Preparation Guide","heading":"Welcome to chapter 7","text":"Welcome “Microbiome Data Preparation Guide.” comprehensive guide tailored researchers analysts engaged microbiome studies, providing essential insights methodologies effective data preparation. Assuming bioinformatics analysis phase successfully completed now possess output features tables, including Operational Taxonomic Unit (OTU) tables, taxonomy tables, metadata table, platforms Mothur Qiime2, guide lead crucial steps refining optimizing microbiome data.","code":""},{"path":"index.html","id":"why-data-preparation-matters","chapter":"IMAP-Part 07: Microbiome Data Preparation Guide","heading":"Why Data Preparation Matters","text":"Microbiome analysis hinges quality integrity data. researchers analysts, intricate process data preparation paramount ensuring reliability downstream analyses accuracy biological interpretations. guide acknowledges diverse skill levels readers, accommodating novice researchers seeking foundational knowledge experienced analysts looking advanced strategies.","code":""},{"path":"index.html","id":"using-otu-and-taxonomy-tables","chapter":"IMAP-Part 07: Microbiome Data Preparation Guide","heading":"Using OTU and Taxonomy Tables","text":"chapter, delve practical aspects using Operational Taxonomic Unit (OTU) tables taxonomy tables inputs downstream analysis. tables, derived bioinformatics phase, serve key components exploring composition diversity microbial communities. learn effectively clean, transform, integrate tables prepare range downstream analyses.","code":""},{"path":"index.html","id":"integrating-metadata-for-context","chapter":"IMAP-Part 07: Microbiome Data Preparation Guide","heading":"Integrating Metadata for Context","text":"integration metadata table enhances analytical capabilities allowing group observations based relevant variables. integration provides context microbiome data also enables explore impact different conditions factors microbial community composition. guide, ’ll demonstrate seamlessly incorporate metadata, unlocking valuable insights relationships microbial communities external variables.","code":""},{"path":"index.html","id":"what-to-expect","chapter":"IMAP-Part 07: Microbiome Data Preparation Guide","heading":"What to Expect","text":"Step--Step Instructions: section guide presents clear concise step--step instructions, ensuring can follow along seamlessly.Step--Step Instructions: section guide presents clear concise step--step instructions, ensuring can follow along seamlessly.Best Practices: Explore best practices data cleaning, transformation, integration, emphasis optimizing microbiome datasets robust analysis.Best Practices: Explore best practices data cleaning, transformation, integration, emphasis optimizing microbiome datasets robust analysis.Practical Insights: Beyond technical instructions, guide provides practical insights help navigate nuanced decisions data preparation, empowering make informed choices align research goals.Practical Insights: Beyond technical instructions, guide provides practical insights help navigate nuanced decisions data preparation, empowering make informed choices align research goals.Whether delving world microbial communities first time seeking advanced strategies refine microbiome data, guide companion. embark journey, commitment data preparation pivotal extracting meaningful biological insights contributing advancement microbiome research.Let’s dive !","code":""},{"path":"preface.html","id":"preface","chapter":"1 Preparing for Downstream Analysis","heading":"1 Preparing for Downstream Analysis","text":"preface, set stage -depth exploration intricacies preparing microbiome data. foundation downstream analyses, effective data preparation essential extracting meaningful biological insights. guide addresses technical aspects data cleaning, transformation, integration also offers practical insights guide researchers nuanced decisions involved optimizing microbiome datasets. Whether ’re novice experienced researcher, embark journey elevate quality reliability microbiome analysis.","code":""},{"path":"prepare-mothur-output.html","id":"prepare-mothur-output","chapter":"2 Prepare Mothur Output","heading":"2 Prepare Mothur Output","text":"","code":""},{"path":"prepare-mothur-output.html","id":"data-directories","chapter":"2 Prepare Mothur Output","heading":"2.1 Data directories","text":"","code":"\nif (!dir.exists('data')) {dir.create('data')}\nif (!dir.exists('data/mothur')) {dir.create('data/mothur')}\n\nlibrary(tidyverse, suppressPackageStartupMessages())## ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n## ✔ dplyr     1.1.4     ✔ readr     2.1.5\n## ✔ forcats   1.0.0     ✔ stringr   1.5.1\n## ✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n## ✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n## ✔ purrr     1.0.2     \n## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n## ✖ dplyr::filter() masks stats::filter()\n## ✖ dplyr::lag()    masks stats::lag()\n## ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors"},{"path":"prepare-mothur-output.html","id":"mothur-metadata","chapter":"2 Prepare Mothur Output","heading":"2.2 Mothur metadata","text":"","code":"\nread_tsv(\"data/mothur/mothur_sample_metadata.tsv\", show_col_types = FALSE) %>% \n  write_csv(\"data/mothur/mothur_tidy_metadata.csv\")"},{"path":"prepare-mothur-output.html","id":"mothur-otutable","chapter":"2 Prepare Mothur Output","heading":"2.3 Mothur otutable","text":"","code":"\nread_tsv(\"../imap-mothur-bioinformatics/mothur_process/asv_analysis/final.asv.shared\", skip = 0, show_col_types = FALSE) %>%\n  dplyr::rename(group=\"Group\") %>% \n  dplyr::select(-c(label, numASVs)) %>% \n  mutate_at(2:ncol(.), as.numeric) %>% \n  mutate_if(is.numeric, ~replace(., is.na(.), 0)) %>% \n  pivot_longer(-group, names_to = \"OTU\", values_to = \"count\") %>% \n  write_csv(\"data/mothur/mothur_tidy_otutable.csv\")"},{"path":"prepare-mothur-output.html","id":"mothur-taxonomy","chapter":"2 Prepare Mothur Output","heading":"2.4 Mothur taxonomy","text":"","code":"\nread_tsv(\"../imap-mothur-bioinformatics/mothur_process/asv_analysis/final.asv.ASV.cons.taxonomy\", show_col_types=FALSE) %>% \n  distinct() %>%\n  dplyr::select(-Size) %>%\n  mutate_if(is.numeric, ~replace(., is.na(.), 0)) %>%\n  mutate(Taxonomy = gsub(\"\\\\(100\\\\)\", \"\", Taxonomy)) %>%  \n  separate(Taxonomy, into = c(\"Kingdom\", \"Phylum\", \"Class\", \"Order\", \"Family\", \"Genus\"), sep = \";\") %>% \n  write_csv(\"data/mothur/mothur_tidy_taxonomy.csv\")"},{"path":"prepare-mothur-output.html","id":"mothur-composite","chapter":"2 Prepare Mothur Output","heading":"2.5 Mothur composite","text":"","code":"\n# Mothur composite\nlibrary(tidyverse, suppressPackageStartupMessages())\n\nmothur_tidy_metadata <- read_csv(\"data/mothur/mothur_tidy_metadata.csv\", show_col_types = FALSE)\nmothur_tidy_otutable <- read_csv(\"data/mothur/mothur_tidy_otutable.csv\", show_col_types = FALSE)\nmothur_tidy_taxonomy <- read_csv(\"data/mothur/mothur_tidy_taxonomy.csv\", show_col_types = FALSE)\n\nmothur_composite <- inner_join(mothur_tidy_metadata, mothur_tidy_otutable, by = \"group\") %>% \n  inner_join(., mothur_tidy_taxonomy, by = \"OTU\") %>% \n  group_by(group) %>% \n  mutate(rel_abund = count/sum(count)) %>% \n  ungroup() %>% \n  mutate_if(is.numeric, ~replace(., is.na(.), 0)) %>%\n  relocate(count, .before = rel_abund) \n\nwrite_csv(mothur_composite, \"data/mothur/mothur_composite.csv\")"},{"path":"prepare-mothur-output.html","id":"create-a-phyloseq-object","chapter":"2 Prepare Mothur Output","heading":"2.6 Create a phyloseq object","text":"","code":"\nlibrary(tidyverse)\nlibrary(phyloseq)\nlibrary(microbiome)\nlibrary(ape)\n\nmetadata <- read_csv(\"data/mothur/mothur_tidy_metadata.csv\",show_col_types = FALSE) %>% \n  tibble::column_to_rownames(\"group\") %>% \n  sample_data(metadata)\n\notutable <- read_csv(\"data/mothur/mothur_tidy_otutable.csv\",show_col_types = FALSE) %>% \n  pivot_wider(id_cols = group, names_from = OTU, values_from = count) %>% \n  tibble::column_to_rownames(\"group\") %>% \n  otu_table(otutable, taxa_are_rows = FALSE)\n\ntaxonomy <- read_csv(\"data/mothur/mothur_tidy_taxonomy.csv\", show_col_types = FALSE) %>%\n  tibble::column_to_rownames(\"OTU\") %>%\n  as.matrix() %>% \n  tax_table(taxonomy)\n\nps_raw_basic <- merge_phyloseq(metadata, otutable, taxonomy)\n\nlibrary(ape)\nps_tree = rtree(ntaxa(ps_raw_basic), rooted=TRUE, tip.label=taxa_names(ps_raw_basic))\nps_raw <- phyloseq::merge_phyloseq(ps_raw_basic, ps_tree)\n\nps_rel <- phyloseq::transform_sample_counts(ps_raw, function(x){x / sum(x)})\n\nsave(ps_tree, ps_raw, ps_rel,  file = \"data/mothur/mothur_phyloseq_objects.rda\")"},{"path":"prepare-mothur-output.html","id":"review-the-phyloseq-object","chapter":"2 Prepare Mothur Output","heading":"2.7 Review the phyloseq object","text":"","code":"\nload(\"data/qiime2/qiime2_phyloseq_objects.rda\", verbose = TRUE)## Loading objects:\n##   ps_tree\n##   ps_raw\n##   ps_rel\n##   ps_df_raw\n##   ps_df_rel"},{"path":"prepare-qiime2-output.html","id":"prepare-qiime2-output","chapter":"3 Prepare Qiime2 Output","heading":"3 Prepare Qiime2 Output","text":"","code":""},{"path":"prepare-qiime2-output.html","id":"data-directories-1","chapter":"3 Prepare Qiime2 Output","heading":"3.1 Data directories","text":"","code":"\nif (!dir.exists('data')) {dir.create('data')}\nif (!dir.exists('data/qiime2')) {dir.create('data/qiime2')}\n\nlibrary(tidyverse, suppressPackageStartupMessages())## ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n## ✔ dplyr     1.1.4     ✔ readr     2.1.5\n## ✔ forcats   1.0.0     ✔ stringr   1.5.1\n## ✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n## ✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n## ✔ purrr     1.0.2     \n## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n## ✖ dplyr::filter() masks stats::filter()\n## ✖ dplyr::lag()    masks stats::lag()\n## ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors"},{"path":"prepare-qiime2-output.html","id":"qiime2-metadata","chapter":"3 Prepare Qiime2 Output","heading":"3.2 Qiime2 metadata","text":"","code":"\nread_tsv(\"../imap-qiime2-bioinformatics/resources/metadata/qiime2_sample_metadata.tsv\", show_col_types = FALSE) %>% \n  dplyr::rename(sample_id=\"sample-id\") %>% \n  write_csv(\"data/qiime2/qiime2_tidy_metadata.csv\")"},{"path":"prepare-qiime2-output.html","id":"qiime2-otutable","chapter":"3 Prepare Qiime2 Output","heading":"3.3 Qiime2 otutable","text":"","code":"\nread_tsv(\"../imap-qiime2-bioinformatics/qiime2_process/export/feature-table.tsv\", skip = 1, show_col_types = FALSE) %>%\n  dplyr::rename(feature='#OTU ID') %>%\n  select(-starts_with('Mock')) %>% \n  mutate_at(2:ncol(.), as.numeric) %>% \n  mutate_if(is.numeric, ~replace(., is.na(.), 0)) %>% \n  pivot_longer(-feature, names_to = \"sample_id\", values_to = \"count\") %>% \n  relocate(sample_id, .before = feature) %>% \n  write_csv(\"data/qiime2/qiime2_tidy_otutable.csv\")"},{"path":"prepare-qiime2-output.html","id":"qiime2-taxonomy","chapter":"3 Prepare Qiime2 Output","heading":"3.4 Qiime2 taxonomy","text":"","code":"\nread_tsv(\"../imap-qiime2-bioinformatics/qiime2_process/export/taxonomy.tsv\", show_col_types=FALSE) %>% \n  dplyr::rename(feature=\"Feature ID\") %>% \n  distinct() %>%\n  mutate_if(is.numeric, ~replace(., is.na(.), 0)) %>%\n  mutate(Taxon = str_replace_all(Taxon, \"; s__$\", \"\"),\n         Taxon = str_replace_all(Taxon, \"; g__$\", \"\"),\n         Taxon = str_replace_all(Taxon, \"; f__$\", \"\"),\n         Taxon = str_replace_all(Taxon, \"; o__$\", \"\"),\n         Taxon = str_replace_all(Taxon, \"; c__$\", \"\"),\n         Taxon = str_replace_all(Taxon, \"; p__$\", \"\"),\n         Taxon = str_replace_all(Taxon, \"; k__$\", \"\"),\n         Taxon = str_replace_all(Taxon, \"\\\\[|\\\\]\", \"\"),\n         Taxon = str_replace_all(Taxon, \"\\\\s\", \"\")) %>%\n  dplyr::filter(!grepl(\"s__*\", Taxon)) %>%\n  dplyr::filter(grepl(\"g__*\", Taxon)) %>% \n  select(-Confidence) %>% \n  mutate(Taxon = str_replace_all(Taxon, \"\\\\w__\", \"\")) %>% \n  separate(Taxon, into = c(\"Kingdom\", \"Phylum\", \"Class\", \"Order\", \"Family\", \"Genus\"), sep = \";\") %>% \n  write_csv(\"data/qiime2/qiime2_tidy_taxonomy.csv\")"},{"path":"prepare-qiime2-output.html","id":"qiime2-composite","chapter":"3 Prepare Qiime2 Output","heading":"3.5 Qiime2 composite","text":"","code":"\n# QIIME2 composite\nlibrary(tidyverse, suppressPackageStartupMessages())\n\nqiime2_tidy_metadata <- read_csv(\"data/qiime2/qiime2_tidy_metadata.csv\", show_col_types = FALSE)\nqiime2_tidy_otutable <- read_csv(\"data/qiime2/qiime2_tidy_otutable.csv\", show_col_types = FALSE)\nqiime2_tidy_taxonomy <- read_csv(\"data/qiime2/qiime2_tidy_taxonomy.csv\", show_col_types = FALSE)\n\nqiime2_composite <- inner_join(qiime2_tidy_metadata, qiime2_tidy_otutable, by = \"sample_id\") %>% \n  inner_join(., qiime2_tidy_taxonomy, by = \"feature\") %>% \n  group_by(sample_id) %>% \n  mutate(rel_abund = count/sum(count)) %>% \n  ungroup() %>% \n  mutate_if(is.numeric, ~replace(., is.na(.), 0)) %>%\n  relocate(count, .before = rel_abund) \n\nwrite_csv(qiime2_composite, \"data/qiime2/qiime2_composite.csv\")"},{"path":"prepare-qiime2-output.html","id":"create-a-phyloseq-object-1","chapter":"3 Prepare Qiime2 Output","heading":"3.6 Create a phyloseq object","text":"","code":"\nlibrary(tidyverse)\nlibrary(phyloseq)## Warning in .recacheSubclasses(def@className, def, env): undefined subclass\n## \"ndiMatrix\" of class \"replValueSp\"; definition not updated\nlibrary(microbiome)## \n## microbiome R package (microbiome.github.com)\n##     \n## \n## \n##  Copyright (C) 2011-2022 Leo Lahti, \n##     Sudarshan Shetty et al. <microbiome.github.io>## \n## Attaching package: 'microbiome'## The following object is masked from 'package:ggplot2':\n## \n##     alpha## The following object is masked from 'package:base':\n## \n##     transform\nlibrary(ape)## \n## Attaching package: 'ape'## The following object is masked from 'package:dplyr':\n## \n##     where\nmetadata <- read_csv(\"data/qiime2/qiime2_tidy_metadata.csv\",show_col_types = FALSE) %>% \n  tibble::column_to_rownames(\"sample_id\") %>% \n  sample_data(metadata)\n\notutable <- read_csv(\"data/qiime2/qiime2_tidy_otutable.csv\",show_col_types = FALSE) %>% \n  pivot_wider(id_cols = sample_id, names_from = feature, values_from = count) %>% \n  tibble::column_to_rownames(\"sample_id\") %>% \n  otu_table(otutable, taxa_are_rows = FALSE)\n\ntaxonomy <- read_csv(\"data/qiime2/qiime2_tidy_taxonomy.csv\", show_col_types = FALSE) %>%\n  tibble::column_to_rownames(\"feature\") %>%\n  as.matrix() %>% \n  tax_table(taxonomy)\n\nps_raw_basic <- merge_phyloseq(metadata, otutable, taxonomy)\n\nlibrary(ape)\nps_tree = rtree(ntaxa(ps_raw_basic), rooted=TRUE, tip.label=taxa_names(ps_raw_basic))\nps_raw <- phyloseq::merge_phyloseq(ps_raw_basic, ps_tree)\n\nps_rel <- phyloseq::transform_sample_counts(ps_raw, function(x){x / sum(x)})\n\nps_df_raw <- psmelt(ps_raw)\n\nps_df_rel <- psmelt(ps_raw)\n\nsave(ps_tree, ps_raw, ps_rel, ps_df_raw, ps_df_rel, file = \"data/qiime2/qiime2_phyloseq_objects.rda\")"},{"path":"prepare-qiime2-output.html","id":"review-the-phyloseq-object-1","chapter":"3 Prepare Qiime2 Output","heading":"3.7 Review the phyloseq object","text":"…","code":"\nload(\"data/qiime2/qiime2_phyloseq_objects.rda\", verbose = TRUE)## Loading objects:\n##   ps_tree\n##   ps_raw\n##   ps_rel\n##   ps_df_raw\n##   ps_df_rel\nwrite_csv(ps_df_raw, \"data/qiime2/ps_df_raw.csv\")\nwrite_csv(ps_df_rel, \"data/qiime2/ps_df_rel.csv\")"},{"path":"imap-github-repos.html","id":"imap-github-repos","chapter":"A IMAP GitHub Repos","heading":"A IMAP GitHub Repos","text":"","code":""},{"path":"data-preparation-rulegraph.html","id":"data-preparation-rulegraph","chapter":"B Data Preparation Rulegraph","heading":"B Data Preparation Rulegraph","text":"","code":""},{"path":"platform-comparison.html","id":"platform-comparison","chapter":"C Platform Comparison","heading":"C Platform Comparison","text":"","code":""},{"path":"session-information.html","id":"session-information","chapter":"D Session Information","heading":"D Session Information","text":"Reproducibility relies ability precisely recreate working environment, session information serves vital reference achieve consistency. record details R environment, package versions, system settings computing environment time analysis.","code":"\nlibrary(sessioninfo)\n\n# Get session info\ninfo <- capture.output(print(session_info()))\n\n# Exclude lines containing specific information (e.g., pandoc and library path)\ninfo_filtered <- info[!grepl(\"pandoc|/Applications/RStudio.app/Contents/Resources/app/quarto/bin/tools/|/Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library|*/Users/*\", info)]\n\n# Save the filtered session info to a text file in the root directory without line numbers\ncat(info_filtered, file = \"session_info.txt\", sep = \"\\n\")"},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
